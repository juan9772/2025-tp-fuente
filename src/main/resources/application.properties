# PostgreSQL Database Configuration
spring.datasource.url=${DB_URL}
spring.datasource.username=${USRNME}
spring.datasource.password=${PSW}

# JPA/Hibernate Configuration
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

# Actuator Configuration
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Debug level Spring
logging.level.org.springframework.web=DEBUG
logging.level.ar.edu.utn.dds=DEBUG

# DevTools Configuration
spring.devtools.restart.enabled=true
server.port=8080

# DataDog Metrics Configuration
# Usando configuración automática de Spring Boot
management.metrics.export.datadog.enabled=true
management.datadog.metrics.export.apiKey=${DATADOG_API_KEY}
management.datadog.metrics.export.step=10s
management.datadog.metrics.export.uri=https://api.us5.datadoghq.com

# Debug para ver qué pasa con Datadog
logging.level.io.micrometer.datadog=DEBUG
logging.level.io.micrometer.core=DEBUG
logging.level.org.springframework.boot.actuate.autoconfigure.metrics=DEBUG

# Tags específicos del módulo fuente
management.metrics.tags.service=fuente
management.metrics.tags.module=fuente
management.metrics.tags.app=fuente
management.metrics.tags.environment=production
management.metrics.tags.grupo=GrupoN12
management.metrics.tags.team=GrupoN12

# Habilitar métricas específicas
management.endpoint.metrics.enabled=true
management.metrics.web.server.request.autotime.enabled=true
management.metrics.enable.http=true
management.metrics.enable.jvm=true
management.metrics.enable.system=true

# StatsD Configuration (backup)

# CloudAMQP (RabbitMQ) Config
spring.rabbitmq.host=${RABBITMG_HOST}
spring.rabbitmq.port=${RABBITMG_PORT}
spring.rabbitmq.username=${RABBITMG_USRNME}
spring.rabbitmq.password=${RABBITMG_PSW}
spring.rabbitmq.virtual-host=${RABBITMG_VHOST}
spring.rabbitmq.ssl.enabled=true
spring.rabbitmq.listener.simple.auto-create=true
